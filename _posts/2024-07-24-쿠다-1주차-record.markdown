이전의 내용: 데이터 분석, ML 모델링 프로젝트를 위한 비즈니스 문제 정의와 분석 목적 도출부터 데이터 분석 환경 세팅에 대해
이번 절: 데이터의 형태와 분포, 이상치와 결측치 등을 확안하는 탐색적 데이터 분석과 상관성 분석 그리고 시각화 기법들에 대해 알아보겠습니다.
>> 이 단계와 전처리 단계는 분석 과정에서 시간과 노력이 소모.

데이터분석 용어 중에는 Garbage In, Garbage Out(GIGO)라는 말이 있다.
데이터의 가치에 따라 결과도 가치의 유무가 결정됨.
Raw Data: 원천데이터-> 오류, 이상치,
Sol, 1) 다양한 각도의 데이터 탐색과 2) 시각화하여 가치있는 데이터로 정제해야 한다.
=== p.122
EDA와 데이터 시각화는 구별하여 생각할 필요가 있다.
EDA: 데이터 파악이 목적, 시각화가 방법
데이터 시각화: 분석 결과를 커뮤니케이션이 목적, 
>> 우리는 흥미 유발과 바를 효과적으로 전달하기 위해 기법이 중요
	EX) 
1) 시간의 흐름: 시간 시각화, 
2) 그룹별 차이: 비교 시각화, 
3) 전체 데이터에서 특정 항목의 차지 비율: 분포 시각화
4) 두 개 이상의 수치 데이터를 통한 서로의 관계: 관계 시각화
5) 지리적 위치에 수치를 나타내는 공간 시각화

# 10.1 탐색적 데이터 분석
탐색적 데이터 분석(Exploratory Data Analysis; EDA)
Raw data를 그대로 탐색하고 분석하는 기법이다.
특성 파악: By 기술통계, 데이터 시각화
주의점: 극단적인 해석, 지나친 추론, 자의적 해석들은 지양
이 단계에서 기초통계 지식이 빛을 발휘한다.
EDA를 사용하는 목적
1.	데이터의 형태와 척도가 분석에 알맞게 되어있는지
2.	데이터의 평균, 분산, 분포, 패턴 등의 확인을 통해 데이터 특성 파악
3.	데이터의 결측값, 이상치 파악
4.	변수 간의 관계성 파악
5.	분석 목적과 방향성 점검 및 보정

## 10.1.1 엑셀을 활용한 EDA
EDA를 하는 간단하고, 효과적인 방법은 샘플을 엑셀에 붙이고, 변수와 설명 리스트와 함께 눈으로 살펴보는 것.
변수: 샘플 데이터
설명 리스트: 칼럼에 어떤 데이터가 들어가는지에 대한 정보들을 넣는다.
-설명 리스트들을 관계와 맞지 않는 데이터는 실무자와의 이야기를 통해 해결
-피벗(pivot) 테이블을 생성하여 지점별, 등급별 판매 가격을 확인
이를 위해 파이썬, R, SAS 등의 가공 및 시각화 기능이 있다.
엑셀은 적은 데이터를 사용할 때 사용. 그만큼 친화적이므로
			그만큼 보조적인 방법이다.
## 10.1.2 탐색적 데이터 분석 실습
Pandas: csv 불러오기+ 데이터 전처리
Seaborn, matplotlib: 시각화 패키지
Df.info()에서 Non-Null Count: 입력에 null이 없는 것을 센다.(결측치인 값을 제외한 개수)
Df.describe()
>기능: Numerical은 통계치- 평균, 평균편차, 최대 최솟값 등을 한번에 볼 수 있다.
문자형은 따로 빈도 등을 이용하여 측정
Df.skew()
다음은 왜도와 첨도를 확인한다. for numerical
Df.kurtosis()
왜도는 skew(), 첨도는 kurtosis() 함수로 간단히 확인할 수 있다.
왜,첨 도는 숫자형 데이터에서 의미있는 데이터이다. 
변숫값 분포에 대한 정규성의 경우, 로그변환, 정규화, 표준화 등의 방법을 사용한다.
왜도:
	높게 나오는 경우:
첨도:
	높게 나오는 경우:

시각화하는 함수(from seaborn)
Sns.distplot(df[변수명]): 해당 변수의 값들의 분포를 시각화한다.
Violinplot(x=”변수”,y=”변수”,data=,inner=None,color=””): 분포를 효과적으로 표현해주는 역할을 한다.
>> 그래프의 형식을 보여준다.
Stripplot(x=”변수”,y=”변수”,data=,size=1): 각 관측치의 위치를 직관적으로 표현해준다.
>> 세로로 각각 값에 대한 y의 분포를 보여준다.

# 10.2 공분산과 상관성 분석
데이터 탐색 과정은 
1. 평균, 분산, 왜도, 첨도, 결측치 등 각 변수의 특성을 파악한 다음
2. 입력 변수 x와 타깃 변수 y와의 관계를 살펴봐야 한다.
> 살피는 과정을 통해 독립의 변화에 따른 종속의 변화를 크게 하여 통계적 정확도를 감소시키는 다중공선성을 방지할 수 있다.
> 상관 분석을 하기 위해서는 데이터가 등간이나 비율 척도이며, 두 변수가 선형적 관계라는 기본 가정을 둔다.
다음에 나오는 그림은 상관 관계에 대한 그림이 나왔다.
## 10.2.1 공분산 
공분산과 상관계수는 변수의 변동이 얼마나 닮았는지를 표현한다는 목적을 가짐.
	차이 : 공분산:	각 데이터의 퍼진 정도의 관계를 뜻한다.
			이를 위해 각 변수의 값에 평균을 뺀 편차를 곱한 값을 더하여 평균
			0: 상관관계 x, +: 양의 상관관계, -: 음의 상관관계
각 선형적인 관계가 없다, 커지면 커진다., 커지면 작아진다.
(+-)1: 완벽한 직선의 관계이다.
값으론 얼마나 상관성이 높은지는 알 수는 없다.

## 10.2.2 상관계수
공분산의 단점: 각 변수의 다른 척도 기준이 반영되어 공분산 값이 지니는 크기가 상관성의 정도를 나타내지 못한다.
>>sol1: 공분산에 각각의 변수의 표준편차를 나누는 정규화(normalization)을 한다.
이는 약한 sol >> sol2 피어슨(Pearson) 상관계수다.
P(x1,x2)=COV(x1,x2)/(var(x1)var(x2)**(1/2)
	수치해석(절댓값):  good > 0.7 > moderate > 0.4 > low
**산점도(그래프의 기울기)와 상관계수는 관련이 없다.
상관계수가 높다는 말 : x1이 움직인 만큼 x2가 움직이는 것이 아닌, x2가 예상할 수 있는 정확도>> 즉 설명력이 높다는 것이다.
결정계수: 상관계수 제곱, : 총 변동 중에서 회귀선에 의해 설명되는 변동이 차지하는 비율을 뜻한다.—설명할 수 있는 지??(예상한 곳으로 가는지?) 라고 생각하면 될 것으로 보인다.
**상관분석은 선형관계(즉 1차 관계)만을 측정할 수 있다. 2차는 낮게 측정된다.
** 이상치에 의해서 매우 낮아질 수 있다.


상관분석의 예시
등간/비율: Pearson correlation coefficient, Point-biserial correlation coefficient
서열: Spearman’s rank correlation coefficient
명목: Phi coefficient, Cramer’s coefficient

예시 코드
Sns.set(font_scale=1.1)
Sns.set_style(‘ticks’)// 축의 눈금
Sns. Pairplot(df, diag_kind=’kde’)// 상관계수가 1이면 분포로 표시
Df.cov()// 공분산
Df.corr(method=’pearson’)//v피어슨 상관계수 확인
문자형은 drop()함수를 이용하여 삭제하기
Sns.heatmap(df.corr(),cmap=’viridis’)
//장: 색깔로 상관관계 알아보기 가능/ 단점: 수치는 안나와 있음.
>>상관계수도 보이는 clustermap 히트맵으로 시각화 해보기
Sns.clustermap(df.corr(),annot=True, cmap=’RdYlBu_r’,vmin=-1,vmax=1)
>>가독성을 높이기 위해 
Np.triu(np.ones_like(df.corr()) //  매트릭스의 우측 상단을 모두 True, 하단을 false로 변환
Mask = np.triu(np.ones_like(df.corr(),dtype=np.bool)) //True/False mask 배열로 변환
// 아래는 page 145 참조 히트맵 그래프 생성

# 10.3 시간 시각화 
시점 요소가 있는 데이터는 시계열(Time series) 형태로 표현할 수 있다.
장: 전체적인 흐름 알 수 있다. 트렌드와 노이즈도 찾을 수 있다.
방법: 연속: 선그래프, 분절형: 막대 그래프
1)	선그래프: 시간 간격의 밀도가 높을 때 사용한다.>> 초 단위 공정 센서, 일년간 일별 판매량 데이터, 
데이터가 많거나, 변동이 심하면 트렌드나 패턴 확인이 어렵다.
	이때는 추세선을 삽입하여 들쭉날쭉한 데이터 흐름을 안정된 선으로 표현.>> 전체적인 흐름과 경향, 패턴을 쉽게 파악한 수 있다.
		How to 추세선? 이동평균(Moving average) 방법을 사용하는 것. 
이동평균 : 데이터의 연속적 그룹의 평균을 구하여 y값에 넣는 것

2)	분절형 시간 시각화: 막대 그래프, 누적 막대그래프, 점 그래프 등으로 표현한다.
시간의 밀도가 낮은 경우에 활용하기 좋은 방법이다. 
장점: 값들의 상대적인 차이를 나타내는 것에 유리하다. + 색상을 통해 시점에 대한 정보를 넣을 수 있다.
누적 막대 그래프는 한 시점에 2개 이상의 세부 항목이 존재할 때 사용한다.

## 10.3.1 시간 시각화 실습
%%% 보충 필요
Matplotlib.pyplot, pandas, datetime
	선그래프와 막대 그래프를 시각화하는 데 필요한 패키지들을 임포트한다.
새로운 함수
Df[‘date2’]=pd.to_datetime(df[‘변수 날짜’,infer_datetime_format=True] //날짜 형식을 변환하는 함수
Df=df.sort_values(by=’Date2’)// 날짜 오름차순 정렬
Df[‘Year’]= df[‘Date2’].dt.year// 연도 칼럼 생성
Df_line=df[df.Year ==2018] // 필터링



# 10.4 비교 시각화
비교 시각화에서 데이터가 간단한 경우? (누적)막대그래프로 표현 가능
	복잡한 경우? 	1) 히트맵 차트(Heatmap chart)   <->히트맵 시각화
				행이 그룹, 열이 요소>> 요소간의 관계를 파악 가능
				행이 A, 열이 B, 색상이 C변수로 하여 표현가능
				열을 시간 흐름으로 하여 시간 시각화도 가능
					단점: 그리는 것이 까다로움, 데이터 구조가 목적에 맞는지 확인이 우선되어야 함.
						분류 그룹, 변수가 너무 많으면 혼란을 유발하므로, 적정한 수준으로 데이터 정제하는 작업이 필요하다.
			2) 방사형 차트(Radar chart)
				꼭짓점이 각각 변수, 캐릭터는 그룹
			3) 평행 좌표 그래프(Parallel coordinates)
				꺽은 선 그래프이다. 
하지만 시계열처럼 x가 같은 변수가 아닌 항목마다 다른 변수를 가지고 있다.
Tip. 목적은 시각화이므로, 이를 부각시키기 위해 Min-max scaling을 통해 각 변수의 가장 낮은 값은 0%, 높은 값은 100%라고 한다.
10.4.1 비교 시각화 실습 p.159
Df1= df[df[‘Tm’].isin([‘ATL’,’BOS’,’BRK’,CHI’,’CHO’])]  // 행에서 해당하는 행만 가져오기
Df1=df1[[‘Tm’,’변수이름’,’변수이름2’]]  //6개 칼럼만 필터링
Df1=df1.groupby(‘Tm’).mean() // 팀별 요소 평균 전처리
방사형 차트 p.163~168

# 10.5 분포 시각화
연속형과 같은 양적 척도
	막대, 선, 히스토그램- 구간 bin이 존재, 높이는 밀도, 값이 속하는 비율이다.
명목형과 같은 질적 척도
	파이차트, 도넛차트 : 둘다 원을 기준으로 비율 값과 비율에 대한 영역이 있다.
	복잡한 경우: 트리맵 차트:		장: 위계 표현 		사각형 안에 사각형을 통해
					단: 구성의 차이가 크면 보기 힘듦 
			와플차트	네모난 조각들로 분포를 표현, 위계는 불가
p.170~
전체 신장 데이터 히스토그램
성별을 구분하여 히스토그램
파이차트와 도넛차트 시각화를 위한 데이터 전처리
파이차트 시각화
도넛 차트 시각화
트리맵 차트 시각화를 위한 데이터 전처리
트리맵 차트 시각화
와플 차트 시각화

# 10.6 관계 시각화
산점도: 그래프에 x에 대한 y값을 찍어주면 된다.
	주의: 극단치는 빼는 게 좋다.-> 극단치로 인해 주요 분포 구간이 압축되므로 효율이 떨어진다.
	겹친 경우: 투명도를 주어 밀도를 표현할 수 있다.
		구간을 나누어 빈도에 따른 농도나 색상을 다르게 하여 표현한다.
버블 차트의 장점 세가지의 요소의 상관관계를 볼 수 있다.
1.	원의 위치, 원의 넓이
주의사항: 관측치(data object)의 개수가 적정 수준이어야 한다.
		해석 시 지름이 아닌 원의 넓이로 봐야 한다.
	여기서 4가지를 넣고 싶다면, 그룹별로 색을 나눠 보여주는 방법이 있다.
	Ex) R&D, 마케팅 비용, 수익

# 10.7 공간 시각화
공간 시각화란? 
	위치 정보인 위도, 경도 데이터를 지도에 매핑하여 시각적으로 표현한 것
	장점: 상호작용인 활용이 가능하다.
종류
	도트맵: dot가 동일한 크기의 점이 특징>> 분포나 패턴에 사용
						정확한 값에는 맞지 않다.
	버블맵: 데이터 값을 원의 크기로 표현함.>> 코로플래스보다는 비율 비교가 용이
						지나치게 크면 비교가 힘듦
	코로플레스맵(Choropleth map) 단계 구분도: 값의 크기에 따라 색상의 음영을 달리한다.
						명도, 투명도, 채도 등 다양하게 표현한다.
						정확한 수치를 인지하여 비교하긴 힘듦.
	커넥션맵(Connection map)- Link map: 점을 선으로 연결하여 지리적 관계를 표현한다.
					>> 연속적 연결로 경로를 표현 가능
					연결선의 분포, 집중도가 목적이다.	
	Flowmap: 선과 출발점, 도착점이 목적
	Cartogram: 영역의 크기가 값에 따라 달라짐.
	


## 10.7.1 공간 시각화 실습 
p.185
folium, plotly
지역 구분을 위한 json파일(각 구의 경계를 표현해준다.)도 있어야 한다.
10.8 박스 플롯
여기선 요소가 있다. 
구성 요소
	QR: 하위 25%에서 75%까지를 박스 형태로 나타내는 이 박스의 세로를 1QR이라고 한다.
	최댓값/최솟값 극단치 경계(미표시): 박스의 각 위/아래에서 1.5QR만큼 떨어진 경계를 나타낸다. 값들이 이 구간 안에 있으면 선으로 표시한다.
	극단치: outlier라고 하고, 아예 경계를 벗어난 경우 dot로 표시
	중앙값: 박스의 가운데 선 
	평균: 박스 내의 하나의 표시
	t사분위가 되려면 공식: t/4(n-1)th value
